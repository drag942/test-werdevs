{"version":3,"sources":["components/Header/index.module.css","components/Calendar/index.module.css","pages/Home/index.module.css","assets/logo.svg","components/Modal/Modal.module.css","components/Header/MobileNavBar/MobileNavBar.module.css","pages/AboutUs/AboutUs.module.css","components/Header/MobileNavBar/MobileNavBar.tsx","components/Header/index.tsx","components/Calendar/calendar.ts","redux/homePageReducer.ts","components/Calendar/index.tsx","components/Modal/Modal.tsx","redux/homePageSelectors.ts","pages/Home/index.tsx","pages/AboutUs/AboutUs.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["module","exports","MobileNavBar","React","useState","open","setOpen","toggleDrawer","event","type","key","className","styles","container","IconButton","onClick","color","SwipeableDrawer","anchor","onClose","onOpen","List","onKeyDown","ListItem","logo","alt","src","Divider","Link","Header","header","Grid","item","xs","Hidden","smDown","menu","menuItem","activeClassName","activeLink","link","to","mdUp","DAYS_IN_MONTH","WEEK_DAYS_FROM_MONDAY","Month","getMonthData","year","month","result","date","Date","daysInMonth","getMonth","getFullYear","isLeapYear","getDaysInMonth","monthStartsOn","dayOfWeek","getDay","getDayOfWeek","day","i","j","nextMonth","nextDay","isDisabled","initialState","selectedDate","showModal","SET_SELECTED_DATE","SET_SHOW_MODAL","setShowModal","payload","homePageReducer","state","action","weekDayNames","Calendar","monthNames","dispatch","useDispatch","currentDate","setDate","getYear","handleDayClick","monthData","calendar","style","map","week","index","classnames","disabledDay","getDate","today","a","b","weekdays","name","dayNames","ModalBlock","isShowModal","useSelector","homePage","getIsShowModal","getSelectedDate","handleClose","Modal","modal","icon","aria-label","spacing","md","value","Home","wrapper","height","lg","xl","leftSide","textBlock","rightSide","AboutUs","Container","maxWidth","App","component","exact","path","reducers","combineReducers","store","createStore","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d3cf7a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2cN4o\",\"logo\":\"Header_logo__25luN\",\"menu\":\"Header_menu__2SgxC\",\"menuItem\":\"Header_menuItem__3Z1Yo\",\"link\":\"Header_link__2WHWx\",\"activeLink\":\"Header_activeLink__2IpSc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendar\":\"Calendar_calendar__7A-9q\",\"day\":\"Calendar_day__1PwEt\",\"disabledDay\":\"Calendar_disabledDay__JD_do\",\"today\":\"Calendar_today__U29V1\",\"weekdays\":\"Calendar_weekdays__2CF75\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Home_wrapper__uJRPg\",\"leftSide\":\"Home_leftSide__37W9w\",\"textBlock\":\"Home_textBlock__1sXlQ\",\"rightSide\":\"Home_rightSide__4w0g3\",\"calendar\":\"Home_calendar__1E08h\"};","module.exports = __webpack_public_path__ + \"static/media/logo.b1a38376.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__3Uccl\",\"container\":\"Modal_container__3Kpg3\",\"icon\":\"Modal_icon__3D8lJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MobileNavBar_container__1_BtV\",\"logo\":\"MobileNavBar_logo__29WyN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AboutUs_wrapper__2JIHR\"};","import React from 'react';\r\n\r\n\r\nimport logo from '../../../assets/logo.svg'\r\nimport styles from './MobileNavBar.module.css'\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport {Link , Divider, ListItem, List, IconButton, SwipeableDrawer} from \"@material-ui/core\";\r\n\r\n\r\nconst MobileNavBar = () =>  {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const toggleDrawer = (open:any) => (event:any) => {\r\n        if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n        setOpen(open);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <IconButton  onClick={toggleDrawer(true)}><MenuIcon color={'primary'}/></IconButton>\r\n            <SwipeableDrawer anchor={'left'} open={open} onClose={toggleDrawer(false)} onOpen={toggleDrawer(true)}  >\r\n                <List  onKeyDown={toggleDrawer(false)} onClick={toggleDrawer(false)}>\r\n                    <ListItem><img className={styles.logo} alt={'logo'} src={logo}/></ListItem>\r\n                    <Divider/>\r\n                    <div>\r\n                         <ListItem>\r\n                                <Link\r\n\r\n                                    color='inherit'\r\n                                >\r\n                                    {'Home'}\r\n                                </Link>\r\n                            </ListItem>\r\n                            <ListItem>\r\n                                <Link\r\n\r\n                                    color='inherit'\r\n                                >\r\n                                    {'About Us'}\r\n                                </Link>\r\n                            </ListItem>\r\n                    </div>\r\n\r\n                </List>\r\n            </SwipeableDrawer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MobileNavBar;","import React from 'react';\r\nimport styles from './index.module.css'\r\nimport {Grid, Hidden} from \"@material-ui/core\";\r\nimport logo from '../../assets/logo.svg'\r\nimport MobileNavBar from \"./MobileNavBar/MobileNavBar\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = ():React.ReactElement => {\r\n\r\n    return (\r\n        <header className={styles.header}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <img alt={'logo'} className={styles.logo} src={logo}/>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Hidden smDown>\r\n                        <nav className={styles.menu}>\r\n                            <li className={styles.menuItem}>\r\n                                <NavLink activeClassName={styles.activeLink} className={styles.link} to={'/home'}>Home</NavLink>\r\n                            </li>\r\n                            <li className={styles.menuItem}>\r\n                                <NavLink activeClassName={styles.activeLink}  className={styles.link} to={'/about'}>{'About us'}</NavLink>\r\n                            </li>\r\n                        </nav>\r\n                    </Hidden>\r\n                    <Hidden mdUp>\r\n                        <MobileNavBar/>\r\n                    </Hidden>\r\n                </Grid>\r\n            </Grid>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","const DAYS_IN_WEEK:number = 7;\r\n\r\nconst DAYS_IN_MONTH:number[] = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\nconst WEEK_DAYS_FROM_MONDAY:number[] = [6, 0, 1, 2, 3, 4, 5];\r\n\r\nconst Month = {\r\n    January: 0,\r\n    February: 1,\r\n    March: 2,\r\n    April: 3,\r\n    May: 4,\r\n    June: 5,\r\n    July: 6,\r\n    August: 7,\r\n    September: 8,\r\n    October: 9,\r\n    Novermber: 10,\r\n    December: 11\r\n};\r\n\r\n\r\n\r\nexport const areEqual = (a:Date, b:Date):Boolean => {\r\n    if (!a || !b) return false;\r\n\r\n    return (\r\n        a.getFullYear() === b.getFullYear() &&\r\n        a.getMonth() === b.getMonth() &&\r\n        a.getDate() === b.getDate()\r\n    );\r\n}\r\n\r\nexport const isLeapYear = (year:number):Boolean => {\r\n    return !((year % 4) || (!(year % 100) && (year % 400)));\r\n};\r\n\r\nexport const getDaysInMonth = (date:Date):number => {\r\n    const month:number = date.getMonth();\r\n    const year:number = date.getFullYear();\r\n    const daysInMonth:number = DAYS_IN_MONTH[month];\r\n\r\n    if (isLeapYear(year) && month === Month.February) {\r\n        return daysInMonth + 1;\r\n    } else {\r\n        return daysInMonth;\r\n    }\r\n};\r\n\r\nexport const getDayOfWeek = (date:Date):number => {\r\n    const dayOfWeek:number = date.getDay();\r\n\r\n    return WEEK_DAYS_FROM_MONDAY[dayOfWeek];\r\n};\r\n\r\nexport  const getMonthData = (year:number, month:number):{date: Date, isDisabled: Boolean}   [][] => {\r\n    const result:{date: Date, isDisabled: Boolean} [][] = [];\r\n    const date:Date = new Date(year, month);\r\n    const daysInMonth:number = getDaysInMonth(date);\r\n    const monthStartsOn:number = getDayOfWeek(date);\r\n    let day:number = 1;\r\n\r\n    for (let i = 0; i < (daysInMonth + monthStartsOn) / DAYS_IN_WEEK; i++) {\r\n        result[i] = [];\r\n\r\n        for (let j = 0; j < DAYS_IN_WEEK; j++) {\r\n            if ((i === 0 && j < monthStartsOn) || day > daysInMonth) {\r\n                if(day > daysInMonth) {\r\n                    const nextMonth = ++month;\r\n                    const nextDay = day++ - daysInMonth;\r\n                        result[i][j] = {\r\n                            date: new Date(year, nextMonth, nextDay),\r\n                            isDisabled: true,\r\n                        };\r\n                }\r\n                if ((i === 0 && j < monthStartsOn)) {\r\n                    result[i][j] = {\r\n                        date: new Date(year, month, (j - monthStartsOn) + 1),\r\n                        isDisabled: true,\r\n                    };\r\n                }\r\n            } else {\r\n                result[i][j] = {\r\n                    date: new Date(year, month, day++),\r\n                    isDisabled: false,\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n};","\r\nconst initialState = {\r\n    selectedDate: new Date(),\r\n    showModal: false,\r\n};\r\n\r\nconst SET_SELECTED_DATE = 'formSectionReducer/SET_SELECTED_DATE';\r\nconst SET_SHOW_MODAL = 'formSectionReducer/SET_SHOW_MODAL';\r\n\r\nconst homePageReducer = (state = initialState, action:any) => {\r\n\r\n    switch (action.type) {\r\n        case SET_SELECTED_DATE: {\r\n            return {\r\n                ...state,\r\n                selectedDate: action.payload,\r\n            }\r\n        }\r\n        case SET_SHOW_MODAL: {\r\n            return {\r\n                ...state,\r\n                showModal: action.payload\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n\r\n};\r\n\r\nexport const setSelectedDate = (payload: Date) => {\r\n    return {\r\n        type: SET_SELECTED_DATE,\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const setShowModal = (payload: Boolean) => {\r\n    return {\r\n        type: SET_SHOW_MODAL,\r\n        payload,\r\n    }\r\n}\r\n\r\n\r\nexport default homePageReducer;","import React, {useState} from 'react';\r\nimport classnames from 'classnames';\r\nimport styles from './index.module.css'\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nimport * as calendar from './calendar';\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport {setSelectedDate, setShowModal} from \"../../redux/homePageReducer\";\r\n\r\n\r\ninterface CalendarProps {\r\n    monthNames: string[]\r\n}\r\n\r\nconst weekDayNames = ['M', 'T', 'W', 'T' , 'F', 'S', 'S'];\r\n\r\nexport const Calendar:React.FC<CalendarProps> = ({monthNames}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const currentDate = new Date();\r\n\r\n    const [date, setDate] = useState(currentDate);\r\n\r\n\r\n\r\n    const getYear = () => {\r\n        return date.getFullYear();\r\n    };\r\n\r\n    const getMonth = () => {\r\n        return date.getMonth();\r\n    };\r\n\r\n    const handlePrevMonthButtonClick = () => {\r\n        const date = new Date(getYear(), getMonth() - 1);\r\n\r\n       setDate(date);\r\n    };\r\n\r\n    const handleNextMonthButtonClick = () => {\r\n        const date = new Date(getYear(), getMonth() + 1);\r\n\r\n        setDate(date);\r\n    };\r\n\r\n\r\n    const handleDayClick = (date:Date) => {\r\n        dispatch(setSelectedDate(date));\r\n        dispatch(setShowModal(true));\r\n\r\n    };\r\n\r\n\r\n    const monthData = calendar.getMonthData(getYear(), getMonth());\r\n\r\n\r\n    return (\r\n            <div className={styles.calendar}>\r\n                <header>\r\n                    <IconButton style={{color: 'white'}}  onClick={handlePrevMonthButtonClick}><ArrowBackIcon/></IconButton>\r\n                    <div>\r\n                        <span>{monthNames[getMonth()]}</span>\r\n                        <span>{getYear()}</span>\r\n                    </div>\r\n                    <IconButton style={{color: 'white'}} onClick={handleNextMonthButtonClick}><ArrowForwardIcon/></IconButton>\r\n                </header>\r\n\r\n                <table>\r\n\r\n\r\n                    <tbody>\r\n                    {monthData.map((week:{date: Date, isDisabled: Boolean} [], index:number) =>\r\n                        <tr key={index} className=\"week\">\r\n                            {week.map((day:{date: Date, isDisabled: Boolean}, index:number) => !day.isDisabled ?\r\n                                <td\r\n                                    key={index}\r\n                                    className={classnames(styles.day, {\r\n                                        [styles.today]: calendar.areEqual(day.date, currentDate),\r\n                                    })}\r\n                                    onClick={() => handleDayClick(day.date)}\r\n                                >{day.date.getDate()}</td>\r\n                                :\r\n                                <td\r\n                                    key={index}\r\n                                    className={classnames(styles.day, styles.disabledDay)}\r\n                                >{day.date.getDate()}</td>\r\n                            )}\r\n                        </tr>\r\n                    )}\r\n                    </tbody>\r\n                </table>\r\n                <footer className={styles.weekdays}>\r\n                    {weekDayNames.map((name:any, index) =>\r\n                        <span key={index}>{name}</span>\r\n                    )}\r\n                </footer>\r\n            </div>\r\n        );\r\n}","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport styles from './Modal.module.css'\r\n\r\nimport {setShowModal} from '../../redux/homePageReducer'\r\nimport {getIsShowModal, getSelectedDate} from \"../../redux/homePageSelectors\";\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {IconButton, Modal, Grid} from \"@material-ui/core\";\r\n\r\n\r\nconst dayNames = ['Sunday','Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\n\r\n\r\ninterface ModalProps {\r\n    monthNames: string[]\r\n}\r\n\r\nconst ModalBlock:React.FC<ModalProps> = ({monthNames}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const isShowModal = useSelector(state => getIsShowModal(state));\r\n    const selectedDate = useSelector(state => getSelectedDate(state));\r\n\r\n    const handleClose = ():void => {\r\n        dispatch(setShowModal(false));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Modal\r\n                open={isShowModal}\r\n                // @ts-ignore\r\n                onClose={handleClose}\r\n                className={styles.modal}\r\n\r\n            >\r\n                <div className={styles.container}>\r\n                    <IconButton className={styles.icon} aria-label=\"close\"  onClick={handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                    <div>\r\n                        <Grid spacing={2} container>\r\n\r\n                            <Grid item xs={12} md={6}>\r\n                                <label>\r\n                                    <p>Month</p>\r\n                                    <input value={`${monthNames[selectedDate.getMonth()]}`}/>\r\n                                </label>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <label>\r\n                                    <p>Day</p>\r\n                                    <input value={`${selectedDate.getDate()}th ${dayNames[selectedDate.getDay()]}`}/>\r\n                                </label>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </div>\r\n\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalBlock;","export const getSelectedDate = (state:any):Date => {\r\n  return state.homePage.selectedDate;\r\n};\r\nexport const getIsShowModal = (state:any):boolean => {\r\n  return state.homePage.showModal;\r\n};\r\n","import React from 'react';\r\nimport styles from './index.module.css'\r\nimport {Grid} from \"@material-ui/core\";\r\nimport {Calendar} from \"../../components/Calendar\";\r\nimport Modal from \"../../components/Modal/Modal\";\r\n\r\nconst monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'Jule', 'August', 'September', 'October', 'November', 'December'];\r\n\r\nconst Home:React.FC = ():React.ReactElement => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <Grid container style={{height: '100%'}}>\r\n                <Grid  item xs={12} md={12} lg={7} xl={7}>\r\n                    <div className={styles.leftSide}>\r\n                        <div className={styles.textBlock}>\r\n                            <h1>\r\n                                Choose the day for the meeting\r\n                            </h1>\r\n                            <p>\r\n                                We encourage you to book your appointment online. <br/>This will save you time.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} md={12} lg={5} xl={5}>\r\n                    <div className={styles.rightSide}>\r\n                        <div className={styles.calendar}>\r\n                            <Calendar monthNames={monthNames}/>\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            <Modal monthNames={monthNames}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport styles from './AboutUs.module.css'\r\nimport {Container} from \"@material-ui/core\";\r\n\r\nconst AboutUs = () => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <Container maxWidth={'lg'}>\r\n                <h2>Lorem ipsum creation timelines</h2>\r\n                <p>\r\n                    So how did the classical Latin become so incoherent? According to McClintock, a 15th century typesetter likely scrambled part of Cicero's De Finibus in order to provide placeholder text to mockup various fonts for a type specimen book.<br/><br/>\r\n                    It's difficult to find examples of lorem ipsum in use before Letraset made it popular as a dummy text in the 1960s, although McClintock says he remembers coming across the lorem ipsum passage in a book of old metal type samples. So far he hasn't relocated where he once saw the passage, but the popularity of Cicero in the 15th century supports the theory that the filler text has been used for centuries.<br/><br/>\r\n                    And anyways, as Cecil Adams reasoned, “[Do you really] think graphic arts supply houses were hiring classics scholars in the 1960s?” Perhaps. But it seems reasonable to imagine that there was a version in use far before the age of Letraset.<br/><br/>\r\n                    McClintock wrote to Before & After to explain his discovery; “What I find remarkable is that this text has been the industry's standard dummy text ever since some printer in the 1500s took a galley of type and scrambled it to make a type specimen book; it has survived not only four centuries of letter-by-letter resetting but even the leap into electronic typesetting, essentially unchanged except for an occasional 'ing' or 'y' thrown in. It's ironic that when the then-understood Latin was scrambled, it became as incomprehensible as Greek; the phrase 'it's Greek to me' and 'greeking' have common semantic roots!” (The editors published his letter in a correction headlined “Lorem Oopsum”).\r\n                </p>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AboutUs;","import React from 'react';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Home from \"./pages/Home\";\nimport AboutUs from \"./pages/AboutUs/AboutUs\";\nimport {Switch, Route, Redirect} from \"react-router-dom\";\n\n\n\nfunction App() {\n  return (\n    <div className={'App'}>\n        <Header/>\n        <Switch>\n            <Route component={Home} exact path={'/home'}/>\n            <Route component={AboutUs} path={'/about'}/>\n            <Route exact path=\"/\">\n                <Redirect to=\"/home\" />\n            </Route>\n        </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import {combineReducers, createStore} from \"redux\";\r\nimport homePageReducer from \"./homePageReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    homePage: homePageReducer,\r\n});\r\n\r\n\r\nconst store = createStore(reducers);\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}